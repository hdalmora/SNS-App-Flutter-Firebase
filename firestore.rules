
//

// General Firestore Rules.

//



service cloud.firestore {

  match /databases/{database}/documents {



    // Allow public read access to all blogs.

    match /blogs/{blogId} {

      allow read;
      allow create: if isSignedIn();

    }

    match /blogs/{blogId}/comments/{commentId} {
        allow read;
        allow create: if isSignedIn();
    }

    match /users/{userId} {
        allow read, create: if isSignedIn();
        allow update: if isSignedIn() && userId == request.auth.uid;
    }



    // Documents representing likes should be private to their owning users.

    match /blogLikes/{likeId} {

      allow create: if isSignedIn()

                       && request.resource.data.size() == 0

                       && exists(/databases/$(database)/documents/blogs/$(blogIdFromLikeId(likeId)));



      allow get, delete: if isSignedIn()

                            && userIdFromBlogLikeId(likeId) == request.auth.uid;

    }



    function isSignedIn() {

      return request.auth != null;

    }



    function blogIdFromLikeId(likeId) {

      return likeId.split(':')[0]

    }



    function userIdFromBlogLikeId(likeId) {

      return likeId.split(':')[1];

    }

  }

}